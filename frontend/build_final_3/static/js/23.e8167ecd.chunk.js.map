{"version":3,"sources":["views/Transaksi/Projects/errorMessage.js","views/Transaksi/Projects/Projects.Column.js","views/Transaksi/Projects/Projects.js"],"names":["Div","styled","div","ErrroMessage","error","type","styles","colStyle","marginTop","align","textAlign","getColumnWidth","data","accessor","headerText","Math","max","map","row","value","_","get","toString","length","column","Header","width","className","filterable","Cell","Consumer","context","to","pathname","state","projectId","Button","color","onClick","props","url","backEndProject","reload","reloadTableAfterDelete","Swal","fire","title","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","footer","then","result","isConfirmed","axios","post","action","id","kategori","propinsi","jenis","nama","nomorKontrak","kontraktorNama","targetCod","status","engineeringStatus","picPln","picKontraktor","response","text","timer","catch","console","log","style","block","setProjectId","ColoredLine","backgroundColor","height","marginBottom","Projects","appContext","useContext","AppContext","useForm","errors","register","handleSubmit","useState","JenisByKategoriList","setJenisByKategoriList","kategoriList","useHttp2","backEndKategori","PropinsiList","backEndPropinsi","kategoriSelectHandler","e","a","target","setKategori","setJenis","backEndJenis","backEndMaster","Http3","useEffect","fetchTableData","Container","fluid","Card","CardBody","Form","onSubmit","reloadTableProjects","Label","htmlFor","Row","Col","md","lg","xl","sm","xs","name","change","placeholder","innerRef","required","key","detail","project_kategori_id","project_kategori_nama","setPropinsi","propinsi_id","propinsi_nama","project_jenis_id","project_jenis_nama","CardHeader","columns","ProjectsColumn","defaultPageSize","noDataText","loading"],"mappings":"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","file":"static/js/23.e8167ecd.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nconst Div = styled.div`\n  color: #f86c6b;\n  font-size: 0.813em;\n`\n\nconst ErrroMessage = ({ error }) => {\n  if (error) {\n    switch (error.type) {\n      case 'required':\n        return <Div> Harus Di Isi </Div>\n      case 'minLength':\n        return <Div> UserId Harus 2 karakter </Div>\n      case 'pattern':\n        return <Div> Alamat Em@il Tidak Sesuai </Div>\n      default:\n        return null\n    }\n  }\n\n  return null\n}\n\nexport default ErrroMessage\n","import React from 'react'\nimport { Button } from 'reactstrap'\nimport { Link } from 'react-router-dom'\nimport { AppContext } from '../../../context'\nimport Swal from 'sweetalert2'\nimport axios from 'axios'\nimport _ from 'lodash'\n\nconst styles = {\n  colStyle: {\n    marginTop: '0.5em'\n  },\n  align: { textAlign: 'right' }\n}\n\n// const getColumnWidth = (rows, accessor, headerText) => {\n//   const maxWidth = 400\n//   const magicSpacing = 10\n//   const cellLength = Math.max(\n//     ...rows.map(row => (`${row[accessor]}` || '').length),\n//     headerText.length\n//   )\n//   return Math.min(maxWidth, cellLength * magicSpacing)\n// }\n\n// const getColumnWidth = (data, accessor, headerText) => {\n//   if (typeof accessor === 'string' || accessor instanceof String) {\n//     accessor = d => d[accessor] // eslint-disable-line no-param-reassign\n//   }\n//   const maxWidth = 600\n//   const magicSpacing = 10\n//   const cellLength = Math.max(\n//     ...data.map(row => (`${accessor(row)}` || '').length),\n//     headerText.length\n//   )\n//   return Math.min(maxWidth, cellLength * magicSpacing)\n// }\n\nconst getColumnWidth = (data, accessor, headerText) => {\n  const cellLength = Math.max(\n    ...data.map(row => {\n      let value = ''\n\n      if (typeof accessor === 'string') {\n        value = _.get(row, accessor)\n      } else {\n        value = accessor(row)\n      }\n\n      if (typeof value === 'number') return value.toString().length\n      return (value || '').length\n    }),\n    headerText.length\n  )\n\n  const magicSpacing = 12\n  return cellLength * magicSpacing\n}\n\nconst HapusData = (props) => {\n  Swal.fire({\n    title: `Hapus ${props.projectId} ?`,\n    icon: 'warning',\n    showCancelButton: true,\n    confirmButtonColor: '#3085d6',\n    cancelButtonColor: '#d33',\n    confirmButtonText: 'Yes, delete it!',\n    footer: '@sikomen'\n  }).then((result) => {\n    if (result.isConfirmed) {\n      axios\n        .post(`${props.url}`, {\n          action: 'd',\n          id: props.projectId,\n          kategori: 0,\n          propinsi: 0,\n          jenis: 0,\n          nama: 0,\n          nomorKontrak: 0,\n          kontraktorNama: 0,\n          targetCod: 0,\n          status: 0,\n          engineeringStatus: 0,\n          picPln: [],\n          picKontraktor: []\n        })\n        .then(response => {\n          // props.reload()\n          props.reload(props.projectId)\n          Swal.fire({\n            title: 'Deleted!',\n            text: 'Your Project deleted.',\n            icon: 'success',\n            timer: 1000,\n            footer: '@sikomen'\n          })\n          // }\n        })\n        .catch(error => {\n          console.log('error', error)\n        })\n    }\n  })\n}\n\nconst column = (data) => {\n//   const appContext = useContext(AppContext)\n  const columns = data = [\n    {\n      Header: 'Aksi',\n      width: '201',\n      accessor: 'project_id',\n      className: 'center',\n      filterable: false,\n      Cell: value => (\n        <div>\n          <AppContext.Consumer>\n            {context => (\n              <>\n                <Link\n                  to={{\n                    pathname: '/transaksi/dokumen',\n                    state: { projectId: value.value }\n                  }} className='btn ghost-light icon-doc'\n                />\n                <Button\n                  color='ghost-danger'\n                  // onClick={() => HapusData({ projectId: value.value, url: context.backEndProject, reload: context.reloadTableProjects })}\n                  onClick={() => HapusData({ projectId: value.value, url: context.backEndProject, reload: context.reloadTableAfterDelete })}\n                >\n                  <i className='icon-trash' />\n                </Button>\n                <Link\n                  to={{\n                    pathname: '/transaksi/rekap',\n                    state: { projectId: value.value }\n                  }} className='btn ghost-light fa fa-table'\n                />\n              </>\n            )}\n          </AppContext.Consumer>\n        </div>\n\n      )\n    },\n    {\n      Header: 'Project ID',\n      accessor: 'project_id',\n      width: '130',\n      Cell: row => (\n        <div style={{ textAlign: 'center' }}>\n          <AppContext.Consumer>\n            {context => (\n              <Button block color='ghost-info'>\n                <Link\n                  to='/transaksi/projects/edit'\n                  onClick={() => context.setProjectId(row.value)}\n                >\n                  {row.value}\n                </Link>\n              </Button>\n            )}\n          </AppContext.Consumer>\n        </div>\n      )\n    },\n    {\n      Header: 'Nama',\n      accessor: 'project_nama',\n      width: getColumnWidth(data, 'project_nama', 'Nama'),\n      filterable: true,\n      Cell: row => <div style={styles.colStyle}>{row.value}</div>\n    },\n    {\n      Header: 'Nomor Kontrak',\n      accessor: 'project_nomor_kontrak',\n      width: getColumnWidth(data, 'project_nomor_kontrak', 'Nomor Kontrak'),\n      filterable: false,\n      Cell: row => <div style={styles.colStyle}>{row.value}</div>\n    },\n    {\n      Header: 'Nama Kontraktor',\n      accessor: 'project_kontraktor_nama',\n      width: getColumnWidth(data, 'project_kontraktor_nama', 'Nama Kontraktor'),\n      filterable: false,\n      Cell: row => <div style={styles.colStyle}>{row.value}</div>\n    },\n\n    {\n      Header: 'Target COD',\n      accessor: 'project_target_cod',\n      width: getColumnWidth(data, 'project_target_cod', 'Target COD'),\n      filterable: false,\n      Cell: row => <div style={styles.colStyle}>{row.value}</div>\n    }\n\n  ]\n  return columns\n}\n\nexport default column\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useContext, useState, useEffect } from 'react'\nimport { Button, Container, Card, CardBody, CardHeader, Row, Col, Form, Label } from 'reactstrap'\nimport { InputanSelect, useHttp2, Http3 } from 'component'\nimport { useForm } from 'react-hook-form'\nimport { Link } from 'react-router-dom'\nimport ReactTable from 'react-table'\nimport 'react-table/react-table.css'\nimport { AppContext } from '../../../context'\n\nimport ErrorMessage from './errorMessage'\nimport ProjectsColumn from './Projects.Column'\n\nconst ColoredLine = ({ color }) => (\n  <hr\n    style={{\n      color,\n      backgroundColor: color,\n      height: 0.3,\n      marginTop: 0,\n      marginBottom: '0.9em'\n    }}\n  />\n)\n\nconst Projects = () => {\n  // --------------------------------------- Init\n  const appContext = useContext(AppContext)\n  const { errors, register, handleSubmit } = useForm()\n  const [JenisByKategoriList, setJenisByKategoriList] = useState([])\n\n  // --------------------------------------- DidMount\n  const kategoriList = useHttp2(`${appContext.backEndKategori}`, [])\n  const PropinsiList = useHttp2(`${appContext.backEndPropinsi}`, [])\n\n  // --------------------------------------- Handler\n  const kategoriSelectHandler = async (e) => {\n    const value = e.target.value\n    appContext.setKategori(value)\n    appContext.setJenis(0)\n    setJenisByKategoriList([])\n    const backEndJenis = `${appContext.backEndMaster}/projectjeniskategori/${value}`\n    const data = await Http3(`${backEndJenis}`)\n    setJenisByKategoriList(data)\n  }\n\n  // --------------------------------------- Componen did mount\n  useEffect(() => { appContext.fetchTableData.length = 0 }, [])\n\n  // --------------------------------------- Reload data table\n  // move to context\n\n  // --------------------------------------- Submit\n  const onSubmit = data => {\n    appContext.reloadTableProjects()\n  }\n\n  // --------------------------------------- CONTENT\n  const content = (\n    <>\n      <Container fluid>\n        <Card>\n          <CardBody>\n            <Form onSubmit={handleSubmit(onSubmit)}>\n              <Label htmlFor='prependedInput' className='register-label-header'>\n                Kategori, Lokasi dan Jenis\n              </Label>\n              <ColoredLine color='#ff9375' />\n              <Row>\n                <Col md='3' lg='3' xl='3' sm='auto' xs='auto'>\n                  <InputanSelect\n                    icon='icon-list'\n                    name='kategori'\n                    // value={kategori}\n                    value={appContext.kategori}\n                    change={kategoriSelectHandler}\n                    placeholder='Kategori'\n                    innerRef={register({ required: true })}\n                    error={<ErrorMessage error={errors.kategori} />}\n                  >\n                    <option key='' value=''>\n                          Pilih Kategori...\n                    </option>\n                    {kategoriList.map(detail => (\n                      <option key={detail.project_kategori_id} value={detail.project_kategori_id}>\n                        {detail.project_kategori_nama}\n                      </option>\n                    ))}\n                  </InputanSelect>\n                </Col>\n                <Col md='3' lg='3' xl='3' sm='auto' xs='auto'>\n                  <InputanSelect\n                    icon='icon-location-pin'\n                    name='propinsi'\n                    value={appContext.propinsi}\n                    change={(e) => appContext.setPropinsi(e.target.value)}\n                    placeholder='Propinsi'\n                    innerRef={register({ required: true })}\n                    error={<ErrorMessage error={errors.propinsi} />}\n                  >\n                    <option key='' value=''>\n                          Pilih Propinsi...\n                    </option>\n                    {PropinsiList.map(detail => (\n                      <option key={detail.propinsi_id} value={detail.propinsi_id}>\n                        {detail.propinsi_nama}\n                      </option>\n                    ))}\n                  </InputanSelect>\n                </Col>\n\n                <Col md='3' lg='3' xl='3' sm='auto' xs='auto'>\n                  <InputanSelect\n                    icon='icon-list'\n                    name='jenis'\n                    // value={jenis}\n                    value={appContext.jenis}\n                    change={(e) => appContext.setJenis(e.target.value)}\n                    placeholder='Jenis'\n                    innerRef={register({ required: true })}\n                    error={<ErrorMessage error={errors.jenis} />}\n                  >\n                    <option key='' value=''>\n                          Pilih Jenis...\n                    </option>\n                    {JenisByKategoriList.map(detail => (\n                      <option key={detail.project_jenis_id} value={detail.project_jenis_id}>\n                        {detail.project_jenis_nama}\n                      </option>\n                    ))}\n                  </InputanSelect>\n                </Col>\n                <Col md='3' lg='3' xl='3' sm='auto' xs='auto'>\n                  <div style={{ textAlign: 'center' }}>\n                    <Button\n                      color='light'\n                      block\n                      className='pr-1'\n                    >\n                      <i className='icon-magnifier-add' />\n                      <span>Cari</span>\n                    </Button>\n                  </div>\n                </Col>\n              </Row>\n            </Form>\n          </CardBody>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <i className='fa fa-table' />Table of Projects\n            <div className='card-header-actions' />\n          </CardHeader>\n          <CardBody>\n            <Row>\n              <Col xs='6'>\n                <Link to='/transaksi/projects/input'>\n                  <Button className='btn-dropbox btn-brand mr-1 mb-1'>\n                    <i className='fa fa-plus' />\n                    <span>Tambah Project</span>\n                  </Button>\n                </Link>\n              </Col>\n            </Row>\n            <div style={{ marginTop: '0.5em' }} />\n            <ReactTable\n              data={appContext.fetchTableData}\n              columns={ProjectsColumn(appContext.fetchTableData)}\n              defaultPageSize={9}\n              className='-striped -highlight'\n              noDataText='Tidak Terdapat Data'\n              loading={appContext.loading} filterable\n            />\n            <nav />\n          </CardBody>\n        </Card>\n      </Container>\n    </>\n  )\n\n  return content\n}\n\nexport default Projects\n"],"sourceRoot":""}