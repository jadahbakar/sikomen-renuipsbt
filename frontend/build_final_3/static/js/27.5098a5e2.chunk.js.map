{"version":3,"sources":["views/Transaksi/Rekap/RekapTitle.js"],"names":["ColoredLine","color","style","backgroundColor","height","marginTop","marginBottom","RekapTitle","props","appContext","useContext","AppContext","urlProject","backEndProject","projectId","useState","setKategori","setJenis","setPropinsi","namaProject","setNamaProject","noKontrak","setNoKontrak","kontraktor","setKontraktor","targetCod","setTargetCod","projectStatus","setProjectStatus","engineering","setEngineering","axios","get","then","response","data","results","projectAll","project_kategori","project_jenis","project_propinsi","project_nama","project_nomor_kontrak","project_kontraktor_nama","project_target_cod","project_status","project_engineering_status","catch","errors","console","log","key","htmlFor","className","md","lg","xl","sm","xs"],"mappings":"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","file":"static/js/27.5098a5e2.chunk.js","sourcesContent":["/* eslint-disable camelcase */\n/* eslint-disable no-unused-vars */\nimport React, { Fragment, useContext, useState } from 'react'\nimport { Label, Row, Col } from 'reactstrap'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { AppContext } from '../../../context/context'\n\nconst ColoredLine = ({ color }) => (\n  <hr\n    style={{\n      color,\n      backgroundColor: color,\n      height: 0.3,\n      marginTop: 0,\n      marginBottom: '0.9em'\n    }}\n  />\n)\n\nColoredLine.propTypes = {\n  color: PropTypes.string.isRequired\n}\n\nconst RekapTitle = (props) => {\n  const appContext = useContext(AppContext)\n  const urlProject = `${appContext.backEndProject}/${props.projectId}`\n  const [kategori, setKategori] = useState('')\n  const [jenis, setJenis] = useState('')\n  const [propinsi, setPropinsi] = useState('')\n  const [namaProject, setNamaProject] = useState('')\n  const [noKontrak, setNoKontrak] = useState('')\n  const [kontraktor, setKontraktor] = useState('')\n  const [targetCod, setTargetCod] = useState('')\n  const [projectStatus, setProjectStatus] = useState('')\n  const [engineering, setEngineering] = useState('')\n\n  // --------------------------------------- DidMount\n  axios\n    .get(urlProject)\n    .then(response => {\n      const {\n        project_kategori,\n        project_jenis,\n        project_propinsi,\n        project_nama,\n        project_nomor_kontrak,\n        project_kontraktor_nama,\n        project_target_cod,\n        project_status,\n        project_engineering_status\n      } = response.data.results.projectAll[0]\n      setKategori(project_kategori)\n      setJenis(project_jenis)\n      setPropinsi(project_propinsi)\n      setNamaProject(project_nama)\n      setNoKontrak(project_nomor_kontrak)\n      setKontraktor(project_kontraktor_nama)\n      setTargetCod(project_target_cod)\n      setProjectStatus(project_status)\n      setEngineering(project_engineering_status)\n    })\n    .catch(errors => {\n      console.log(errors)\n    })\n\n  // --------------------------------------- Main\n  const content = (\n    <Fragment key={appContext.projectId}>\n      <Label htmlFor='prependedInput' className='register-label-header'> Detail Project - <b>{props.projectId}</b></Label>\n      <ColoredLine color='#ff9375' />\n      <Row>\n        <Col md='2' lg='2' xl='2' sm='auto' xs='auto'>\n          <Label htmlFor='prependedInput' className='register-label-header'> Nama Project </Label>\n        </Col>\n        <Col md='10' lg='10' xl='10' sm='auto' xs='auto'>\n          <Label htmlFor='prependedInput' className='register-label-header'> <b> {namaProject} </b></Label>\n        </Col>\n      </Row>\n      <Row>\n        <Col md='2' lg='2' xl='2' sm='auto' xs='auto'>\n          <Label htmlFor='prependedInput' className='register-label-header'> Nomor Kontrak</Label>\n        </Col>\n        <Col md='10' lg='10' xl='10' sm='auto' xs='auto'>\n          <Label htmlFor='prependedInput' className='register-label-header'> <b> {noKontrak} </b></Label>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md='6' lg='6' xl='6' sm='auto' xs='auto'>\n          <Row>\n            <Col md='4' lg='4' xl='4' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'>Kontraktor</Label>\n            </Col>\n            <Col md='8' lg='8' xl='8' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> <b> {kontraktor} </b></Label>\n            </Col>\n          </Row>\n        </Col>\n        <Col md='6' lg='6' xl='6' sm='auto' xs='auto'>\n          <Row>\n            <Col md='4' lg='4' xl='4' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> Target COD </Label>\n            </Col>\n            <Col md='8' lg='8' xl='8' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> <b> {targetCod} </b></Label>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n\n      <Row>\n        <Col md='6' lg='6' xl='6' sm='auto' xs='auto'>\n          <Row>\n            <Col md='4' lg='4' xl='4' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> Project Status  </Label>\n            </Col>\n            <Col md='8' lg='8' xl='8' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> <b> {projectStatus}  </b></Label>\n            </Col>\n          </Row>\n        </Col>\n        <Col md='6' lg='6' xl='6' sm='auto' xs='auto'>\n          <Row>\n            <Col md='4' lg='4' xl='4' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> Engineering </Label>\n            </Col>\n            <Col md='8' lg='8' xl='8' sm='auto' xs='auto'>\n              <Label htmlFor='prependedInput' className='register-label-header'> <b> {engineering} </b></Label>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n  return content\n}\n\nexport default RekapTitle\n"],"sourceRoot":""}