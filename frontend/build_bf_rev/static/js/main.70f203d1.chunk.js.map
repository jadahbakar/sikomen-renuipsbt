{"version":3,"sources":["context/context.js","component/PrivateRoute/PrivateRoute.js","api/api.js","polyfill.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","AppProvider","props","useState","token","setToken","axios","defaults","headers","common","Authorization","user","setUser","userRole","setUserRole","kategori","setKategori","propinsi","setPropinsi","jenis","setJenis","projectId","setProjectId","kategoriNama","setKategoriNama","jenisNama","setJenisNama","propinsiNama","setPropinsiNama","dashboardData","setDashboardData","fetchTableData","setFetchTableData","loading","setLoading","fetchColumn","setFetchColumn","backEndDownload","API_ROOT","backEndMaster","backEndProject","backEndUsers","backEndDokumen","backEndDashboard","backEndRekap","backEndKategori","backEndPropinsi","backEndStatus","backEndEngineering","Provider","value","reloadTableProjects","get","then","response","data","results","projectAll","catch","error","console","log","reloadTableAfterDelete","id","filtered","filter","el","project_id","children","PrivateRoute","Component","component","rest","render","sessionStorage","getItem","to","backendHost","hostname","window","location","process","REACT_APP_BACKEND_HOST","CustomEvent","event","params","bubbles","cancelable","detail","undefined","evt","document","createEvent","initCustomEvent","prototype","Event","DefaultLayout","React","lazy","Login","Page503","App","basename","Suspense","fallback","className","exact","path","name","Boolean","match","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.70f203d1.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\nimport { API_ROOT } from '../api/api'\nimport axios from 'axios'\n\nexport const AppContext = createContext()\n\nexport const AppProvider = (props) => {\n  const [token, setToken] = useState('')\n  axios.defaults.headers.common.Authorization = token\n\n  // ------------------------------------ main state\n  const [user, setUser] = useState('')\n  const [userRole, setUserRole] = useState(0)\n  const [kategori, setKategori] = useState(0)\n  const [propinsi, setPropinsi] = useState(0)\n  const [jenis, setJenis] = useState(0)\n  const [projectId, setProjectId] = useState()\n\n  const [kategoriNama, setKategoriNama] = useState('')\n  const [jenisNama, setJenisNama] = useState('')\n  const [propinsiNama, setPropinsiNama] = useState('')\n  const [dashboardData, setDashboardData] = useState([])\n  // ------------------------------------\n\n  const [fetchTableData, setFetchTableData] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [fetchColumn, setFetchColumn] = useState([])\n\n  const backEndDownload = `${API_ROOT}`\n\n  const backEndMaster = `${API_ROOT}/master`\n  const backEndProject = `${API_ROOT}/project`\n  const backEndUsers = `${API_ROOT}/users`\n  const backEndDokumen = `${API_ROOT}/dokumen`\n  const backEndDashboard = `${API_ROOT}/dashboard`\n  const backEndRekap = `${API_ROOT}/rekap`\n\n  const backEndKategori = `${backEndMaster}/projectkategori/all`\n  const backEndPropinsi = `${backEndMaster}/propinsi/all`\n  const backEndStatus = `${backEndMaster}/projectstatus/all`\n  const backEndEngineering = `${backEndMaster}/engineeringstatus/all`\n\n  const reloadTableAfterDelete = (id) => {\n    const filtered = fetchTableData.filter(function (el) { return el.project_id !== id })\n    setFetchTableData(filtered)\n  }\n\n  const reloadTableProjects = () => {\n    setLoading(true)\n    axios\n      .get(`${backEndProject}/detail/${kategori}/${propinsi}/${jenis}`)\n      .then(response => {\n        let data = response.data.results.projectAll\n        if (data === null) {\n          data = []\n        }\n        setFetchTableData(data)\n        setLoading(false)\n      })\n      .catch(error => {\n        setLoading(false)\n        if (error) {\n          console.log('TCL: reloadTableData -> error', error)\n        }\n      })\n  }\n\n  const content = (\n    <>\n      <AppContext.Provider\n        value={{\n          backEndDownload,\n          backEndMaster,\n          backEndProject,\n          backEndUsers,\n          backEndKategori,\n          backEndPropinsi,\n          backEndStatus,\n          backEndEngineering,\n          backEndDokumen,\n          backEndDashboard,\n          backEndRekap,\n          user,\n          setUser,\n          userRole,\n          setUserRole,\n          kategori,\n          setKategori,\n          propinsi,\n          setPropinsi,\n          jenis,\n          setJenis,\n          projectId,\n          setProjectId,\n          kategoriNama,\n          setKategoriNama,\n          jenisNama,\n          setJenisNama,\n          propinsiNama,\n          setPropinsiNama,\n          dashboardData,\n          setDashboardData,\n          token,\n          fetchTableData,\n          setFetchTableData,\n          loading,\n          setLoading,\n          fetchColumn,\n          setFetchColumn,\n          setToken,\n          reloadTableProjects,\n          reloadTableAfterDelete\n        }}\n      >\n        {props.children}\n      </AppContext.Provider>\n    </>\n  )\n  return content\n}\n","// https://gist.github.com/abohannon/cca2dd998edf9dc2c2165f538eece4b2\n// https://medium.com/@tomlarge/private-routes-with-react-router-dom-28e9f40c7146\n// https://medium.com/@thanhbinh.tran93/private-route-public-route-and-restricted-route-with-react-router-d50b27c15f5e\n// https://stackoverflow.com/questions/43164554/how-to-implement-authenticated-routes-in-react-router-4\n/* global sessionStorage */\nimport React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <Route {...rest} render={props => (sessionStorage.getItem('tkn') ? <Component {...props} /> : <Redirect to='/login' />)} />\n)\n\nexport default PrivateRoute\n","let backendHost\n// const apiPort = 8000\nconst apiVersion = 'v1'\n// const apiVersion2 = 'v2'\n\nconst hostname = window && window.location && window.location.hostname\n\nif (hostname !== 'localhost') {\n  backendHost = `http://${hostname}`\n} else {\n  backendHost = process.env.REACT_APP_BACKEND_HOST || 'http://localhost'\n}\n\n// ------- for Develepment\n// const API_ROOT = `${backendHost}:${apiPort}/${apiVersion}`\n// ------- for Production\nconst API_ROOT = `${backendHost}/api/${apiVersion}`\n\nexport { API_ROOT }\n// export { API_ROOT, API_ROOT2 }\n","/*\n * required polyfills\n */\nimport 'core-js'\nimport 'core-js/features/set/map'\nimport 'core-js/features/map';\n\n/** IE9, IE10 and IE11 requires all of the following polyfills. * */\n// import 'core-js/es6/symbol'\n// import 'core-js/es6/object'\n// import 'core-js/es6/function'\n// import 'core-js/es6/parse-int'\n// import 'core-js/es6/parse-float'\n// import 'core-js/es6/number'\n// import 'core-js/es6/math'\n// import 'core-js/es6/string'\n// import 'core-js/es6/date'\n// import 'core-js/es6/array'\n// import 'core-js/es6/regexp'\n// import 'core-js/es6/map'\n// import 'core-js/es6/weak-map'\n// import 'core-js/es6/set'\n// import 'core-js/es7/object'\n\n/** IE10 and IE11 requires the following for the Reflect API. */\n// import 'core-js/es6/reflect'\n\n/** Evergreen browsers require these. * */\n// Used for reflect-metadata in JIT. If you use AOT (and only Angular decorators), you can remove.\n// import 'core-js/es7/reflect'\n\n// CustomEvent() constructor functionality in IE9, IE10, IE11\n(function () {\n  if (typeof window.CustomEvent === 'function') return false\n\n  function CustomEvent (event, params) {\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    const evt = document.createEvent('CustomEvent')\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail)\n    return evt\n  }\n\n  CustomEvent.prototype = window.Event.prototype\n\n  window.CustomEvent = CustomEvent\n})()\n","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport './App.scss'\nimport PrivateRoute from './component/PrivateRoute'\nimport { AppProvider } from './context'\n\n// import checkRequests from './component/checkRequests'\n\nconst loading = () => (\n  <div className='animated fadeIn pt-3 text-center'>\n    <div className='sk-spinner sk-spinner-pulse' />\n  </div>\n)\n\n// Containers\nconst DefaultLayout = React.lazy(() => import('./containers/DefaultLayout'))\n\n// Pages\nconst Login = React.lazy(() => import('./views/Pages/Login'))\nconst Page503 = React.lazy(() => import('./views/Pages/Page503'))\n\nconst App = () => {\n  const content = (\n    <AppProvider>\n      <Router basename='/'>\n        <React.Suspense fallback={loading()}>\n          <Switch>\n            <Route exact path='/503' name='Page503' render={props => <Page503 {...props} />} />\n            <Route exact path='/login' name='Login' render={props => <Login {...props} />} />\n            <PrivateRoute path='/' name='Home' component={DefaultLayout} />\n          </Switch>\n        </React.Suspense>\n      </Router>\n    </AppProvider>\n  )\n  return content\n}\n\n// export default checkRequests(App)\nexport default App\n","/* global fetch */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          const a = 'This web app is being served cache-first by a service '\n          const b = 'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          console.log(a + b)\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (response.status === 404 || response.headers.get('content-type').indexOf('javascript') === -1) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","// import 'react-app-polyfill/ie9'; // For IE 9-11 support\nimport 'react-app-polyfill/ie11' // For IE 11 support\nimport 'react-app-polyfill/stable'\nimport './polyfill'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nimport 'assets/css/my-custom.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nserviceWorker.unregister()\n"],"sourceRoot":""}