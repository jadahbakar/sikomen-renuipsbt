{"version":3,"sources":["../node_modules/reactstrap/es/CardFooter.js","views/Security/PasswordReset/errorMessage.js","views/Security/PasswordReset/PasswordReset.js"],"names":["propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","CardFooter","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","Div","styled","div","ErrroMessage","error","type","ColoredLine","color","style","backgroundColor","height","marginTop","marginBottom","ProjectInput","appContext","useContext","AppContext","useForm","errors","register","handleSubmit","useState","password","setPassword","confirmPassword","setConfirmPassword","showSwal","icon","title","message","Swal","fire","text","timer","footer","then","result","Row","Col","xs","sm","md","size","offset","Card","CardBody","Form","onSubmit","data","axios","post","backEndUsers","userId","user","response","results","catch","console","log","Label","htmlFor","name","value","change","e","target","placeholder","innerRef","required","Button","block"],"mappings":"+HAAA,gFAMIA,EAAY,CACdC,IAAKC,IACLC,UAAWC,IAAUC,OACrBC,UAAWF,IAAUG,QAMnBC,EAAa,SAAoBC,GACnC,IAAIN,EAAYM,EAAMN,UAClBG,EAAYG,EAAMH,UAClBI,EAAMD,EAAMR,IACZU,EAAaC,YAA8BH,EAAO,CAAC,YAAa,YAAa,QAE7EI,EAAUC,YAAgBC,IAAWZ,EAAW,eAAgBG,GACpE,OAAoBU,IAAMC,cAAcP,EAAKQ,YAAS,GAAIP,EAAY,CACpER,UAAWU,MAIfL,EAAWR,UAAYA,EACvBQ,EAAWW,aAjBQ,CACjBlB,IAAK,OAiBQO,O,4TC1Bf,IAAMY,E,OAAMC,EAAOC,IAAV,KAoBMC,EAfM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,GAAIA,EACF,OAAQA,EAAMC,MACZ,IAAK,WACH,OAAO,kBAACL,EAAD,uBACT,IAAK,YACH,OAAO,kBAACA,EAAD,kCACT,QACE,OAAO,KAIb,OAAO,M,SCRHM,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAClB,wBACEC,MAAO,CACLD,QACAE,gBAAiBF,EACjBG,OAAQ,GACRC,UAAW,EACXC,aAAc,YAwGLC,UA/FM,SAAAxB,GACnB,IAAMyB,EAAaC,qBAAWC,KADF,EAEeC,cAAnCC,EAFoB,EAEpBA,OAAQC,EAFY,EAEZA,SAAUC,EAFE,EAEFA,aAFE,EAIIC,mBAAS,IAJb,mBAIrBC,EAJqB,KAIXC,EAJW,OAKkBF,mBAAS,IAL3B,mBAKrBG,EALqB,KAKJC,EALI,KAYtBC,EAAW,SAACC,EAAMC,EAAOC,GAC7BC,IAAKC,KAAK,CACRJ,KAAMA,EACNC,MAAOA,EACPI,KAAMH,EACNI,MAAO,IACPC,OAAQ,aACPC,MAAK,SAAAC,GAXRb,EAAY,IACZE,EAAmB,QAmFrB,OAhDE,oCAEE,kBAACY,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1C,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAU9D,UAAU,OAClB,kBAAC+D,EAAA,EAAD,CAAMC,SAAU3B,GA1BX,SAAC4B,GACZ1B,IAAaE,GACfyB,IAAMC,KAAN,UAAcpC,EAAWqC,aAAzB,kBAAuD,CACrDC,OAAQtC,EAAWuC,KACnB/B,SAAUA,IAETa,MAAK,SAAAmB,GAC0B,OAA1BA,EAASN,KAAKO,QAChB7B,EAAS,UAAW,0BAA2B,IAE/CA,EAAS,UAAW,6BAA8B,OAEnD8B,OAAM,SAAApD,GACPsB,EAAS,QAAS,uBAAwBtB,GAC1CqD,QAAQC,IAAItD,UAaN,kBAACuD,EAAA,EAAD,CAAOC,QAAQ,iBAAiB7E,UAAU,yBAA1C,kBAGA,kBAAC,EAAD,CAAawB,MAAM,YACnB,kBAAC,IAAD,CACEoB,KAAK,YACLkC,KAAK,WACLC,MAAOxC,EACPyC,OAAQ,SAAAC,GAAC,OAAIzC,EAAYyC,EAAEC,OAAOH,QAClCI,YAAY,WACZC,SAAUhD,EAAS,CACjBiD,UAAU,IAEZhE,MAAO,kBAAC,EAAD,CAAcA,MAAOc,EAAOI,aAErC,kBAAC,IAAD,CACEK,KAAK,YACLkC,KAAK,kBACLC,MAAOtC,EACPuC,OAAQ,SAAAC,GAAC,OAAIvC,EAAmBuC,EAAEC,OAAOH,QACzCI,YAAY,uBACZC,SAAUhD,EAAS,CACjBiD,UAAU,IAEZhE,MAAO,kBAAC,EAAD,CAAcA,MAAOc,EAAOM,oBAGrC,kBAAC6C,EAAA,EAAD,CAAQ9D,MAAM,SAAS+D,OAAK,EAAC5B,KAAK,MAAlC,oBAKJ,kBAACtD,EAAA,EAAD,CAAYL,UAAU,eACpB,kBAAC4E,EAAA,EAAD,CAAOC,QAAQ,kBAAf","file":"static/js/22.162d271c.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;","import React from 'react'\nimport styled from 'styled-components'\n\nconst Div = styled.div`\n  color: #f86c6b;\n  font-size: 0.813em;\n`\n\nconst ErrroMessage = ({ error }) => {\n  if (error) {\n    switch (error.type) {\n      case 'required':\n        return <Div> Harus Di Isi </Div>\n      case 'minLength':\n        return <Div> UserId Harus 2 karakter </Div>\n      default:\n        return null\n    }\n  }\n\n  return null\n}\n\nexport default ErrroMessage\n","/* eslint-disable no-unused-vars */\n/* global sessionStorage */\nimport React, { useState, useEffect, useContext } from 'react'\nimport { Button, Card, Input, CardHeader, CardBody, CardFooter, Col, Container, Row, Label, Form, FormGroup } from 'reactstrap'\nimport { Inputan, InputanPassword, InputanSelect, useHttp2, useHttp } from 'component'\nimport Swal from 'sweetalert2'\nimport PropTypes from 'prop-types'\nimport axios from 'axios'\nimport { useForm } from 'react-hook-form'\nimport ErrorMessage from './errorMessage'\nimport { AppContext } from '../../../context'\n\nconst ColoredLine = ({ color }) => (\n  <hr\n    style={{\n      color,\n      backgroundColor: color,\n      height: 0.3,\n      marginTop: 0,\n      marginBottom: '0.9em'\n    }}\n  />\n)\n\nColoredLine.propTypes = {\n  color: PropTypes.string.isRequired\n}\n\nconst ProjectInput = props => {\n  const appContext = useContext(AppContext)\n  const { errors, register, handleSubmit } = useForm()\n\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  const hideAlert = () => {\n    setPassword('')\n    setConfirmPassword('')\n  }\n\n  const showSwal = (icon, title, message) => {\n    Swal.fire({\n      icon: icon,\n      title: title,\n      text: message,\n      timer: 1000,\n      footer: '@sikomen'\n    }).then(result => {\n      hideAlert()\n    })\n  }\n\n  const onSubmit = (data) => {\n    if (password === confirmPassword) {\n      axios.post(`${appContext.backEndUsers}/resetpassword`, {\n        userId: appContext.user,\n        password: password\n      })\n        .then(response => {\n          if (response.data.results === null) {\n            showSwal('warning', 'Password Gagal Di Reset', '')\n          } else {\n            showSwal('success', 'Password Berhasil Di Reset', '')\n          }\n        }).catch(error => {\n          showSwal('error', 'Gagal Reset Password', error)\n          console.log(error)\n        })\n    }\n  }\n\n  const content = (\n    <>\n      {/* <Container fluid align-items-center> */}\n      <Row>\n        <Col xs='12' sm='12' md={{ size: 4, offset: 4 }}>\n          <Card>\n            <CardBody className='p-4'>\n              <Form onSubmit={handleSubmit(onSubmit)}>\n                <Label htmlFor='prependedInput' className='register-label-header'>\n                    Reset Password\n                </Label>\n                <ColoredLine color='#ff9375' />\n                <InputanPassword\n                  icon='icon-lock'\n                  name='password'\n                  value={password}\n                  change={e => setPassword(e.target.value)}\n                  placeholder='Password'\n                  innerRef={register({\n                    required: true\n                  })}\n                  error={<ErrorMessage error={errors.password} />}\n                />\n                <InputanPassword\n                  icon='icon-lock'\n                  name='confirmPassword'\n                  value={confirmPassword}\n                  change={e => setConfirmPassword(e.target.value)}\n                  placeholder='Tulis Ulang Password'\n                  innerRef={register({\n                    required: true\n                  })}\n                  error={<ErrorMessage error={errors.confirmPassword} />}\n                />\n\n                <Button color='danger' block size='lg'>\n                    Reset Password\n                </Button>\n              </Form>\n            </CardBody>\n            <CardFooter className='text-center'>\n              <Label htmlFor='prependedInput'>Pastikan data yang di Input sudah Benar.</Label>\n            </CardFooter>\n          </Card>\n        </Col>\n      </Row>\n      {/* </Container> */}\n    </>\n  )\n  return content\n}\n\nexport default ProjectInput\n"],"sourceRoot":""}